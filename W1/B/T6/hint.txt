你需要做的事情：用 spj 中定义的“汇编语言”，写一段程序。
- 在该程序中，使用 `do` 指令可以将子系统的"隐私数据"加载入内存，但是会被加密
- 使用 `print` 函数输出某个寄存器的值表示答案

你需要想办法突破模拟器对内存的加密，从被加密的内存中解读出真正的原始数据，然后将其输出。


模拟器概要：
- 模拟了类似riscv的32个寄存器，0号寄存器保持值为0；
- 模拟了部分指令，添加了几个特殊指令以简化问题
- 对部分内存进行加密读写。为了简化问题，每个加密区域都只有固定 8 个字节。

example.txt 中给出了一段示例代码，这个代码可以读出第 0 个加密内存中加密过的值，也即加密过的"隐私数据"

指令概述：
- 算术指令形如 add rd rs1 rs2 表示将 rs1 号寄存器的值加 rs2 号寄存器的值的结果存入 rd 号寄存器。rs1,rs2,rd 可以是同一个寄存器
- 分支指令形如 beq rs1 rs2 imm 表示，如果 rs1 寄存器与 rs2 寄存器相等，则跳转到第 imm 号指令（地址为 imm * 4）
- EnterNewEnclave 模拟进入可信环境的操作。进入之后，对特定内存区域的读写将自动加密和解密
- ExitEnclave 离开可信环境，此后对任何内存区域的读写均不加密
- DoSubSystem 模拟执行虚拟机等子系统。子系统的数据将被加密地存储在内存中。详见函数 `do_do_subsystem`。
- Print 输出某个寄存器的值表示答案。输出后模拟器将结束运行。
